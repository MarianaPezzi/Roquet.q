"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toConversation = exports.Folder = exports.ConversationType = void 0;
const identifier_1 = require("./identifier");
const message_1 = require("./message");
const timestamp_1 = require("./timestamp");
var ConversationType;
(function (ConversationType) {
    ConversationType["ONE_ON_ONE"] = "one_on_one";
    ConversationType["CAMPAIGN"] = "campaign";
    ConversationType["GROUP"] = "group";
    ConversationType["SURVEY"] = "survey";
})(ConversationType = exports.ConversationType || (exports.ConversationType = {}));
var Folder;
(function (Folder) {
    Folder["INBOX"] = "inbox";
    Folder["ARCHIVE"] = "archive";
})(Folder = exports.Folder || (exports.Folder = {}));
// tslint:disable-next-line no-any
function toConversation(data) {
    const id = data.id ? new identifier_1.NumericIdentifier(data.id) : undefined;
    const modified = data.modified ? timestamp_1.parseTimestamp(data.modified) : undefined;
    let profile = undefined;
    if (data.profile) {
        profile = new identifier_1.UsernameIdentifier(data.profile);
    }
    let usernames = undefined;
    if (data.usernames) {
        usernames = data.usernames.map((n) => new identifier_1.UsernameIdentifier(n));
    }
    let messages = undefined;
    if (data.messages) {
        // tslint:disable-next-line no-any
        messages = data.messages.map((m) => message_1.toMessage(m));
    }
    return Object.assign({}, data, {
        id,
        profile,
        usernames,
        modified,
        messages,
    });
}
exports.toConversation = toConversation;
