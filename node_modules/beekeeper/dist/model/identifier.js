"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UsernameIdentifier = exports.UUIDIdentifier = exports.NumericIdentifier = exports.BasicIdentifier = void 0;
/**
 * A basic identifier implementing Identifier interface and accepting a type.
 * @implements Identifier
 */
class BasicIdentifier {
    /**
     * @param {T} val of the identification data
     */
    constructor(val) {
        this._value = val;
    }
    isSame(other) {
        if (other instanceof this.constructor) {
            return this.value === other.value;
        }
        else {
            return false;
        }
    }
    /**
     * @returns {T} value of the identifier
     */
    get value() {
        return this._value;
    }
    /**
     * Returns a stringified version of the identifier
     */
    toString() {
        return `${this._value}`;
    }
    /**
     * Returns JSON value of the identifier
     */
    toJSON() {
        return this._value;
    }
}
exports.BasicIdentifier = BasicIdentifier;
/** A number based basic identifier representing ID identifiers */
class NumericIdentifier extends BasicIdentifier {
}
exports.NumericIdentifier = NumericIdentifier;
/** A string based basic identifier representing UUID identifiers  */
class UUIDIdentifier extends BasicIdentifier {
}
exports.UUIDIdentifier = UUIDIdentifier;
/** A string based basic identifier representing usernames */
class UsernameIdentifier extends BasicIdentifier {
}
exports.UsernameIdentifier = UsernameIdentifier;
