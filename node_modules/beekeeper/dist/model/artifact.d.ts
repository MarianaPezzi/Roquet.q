export declare type ArtifactType = 'file' | 'folder';
interface FileMetadata {
    mimeType: string;
    url: string;
    userId?: string;
    size: number;
}
declare type FolderMetadata = Record<never, never>;
export interface Artifact {
    type: string | ArtifactType;
    parentId?: string;
    name: string;
    metadata: FileMetadata | FolderMetadata;
    children?: Artifact[];
    breadcrumbs?: object[];
    updatedAt?: Date;
    filterData?: object;
    acl?: Acl;
    id?: string;
    tenantId?: number;
    createdAt?: Date;
}
export interface Actor {
    role: string;
    resourceId: string;
    resourceType: string;
}
export interface Granted {
    role: string;
    resourceType: string;
    resourceId: string;
    actor: Actor;
}
export interface Acl {
    resourceType: string;
    resourceId: string;
    granted?: Granted[];
}
export declare function toArtifact(data: any): Artifact;
export declare function toAcl(data: any): Acl;
export {};
