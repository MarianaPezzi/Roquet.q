import { CustomField } from './custom-field';
import { NumericIdentifier, UsernameIdentifier, UUIDIdentifier } from './identifier';
import { Photo } from './photo';
import { URLString } from './string-fields';
/**
 * A role of a user
 */
export declare enum UserRole {
    ADMIN = "admin",
    MEMBER = "member"
}
export interface User {
    id: UUIDIdentifier;
    name: UsernameIdentifier;
    display_name: string;
    display_name_extension: string;
    role: UserRole;
    avatar: URLString;
    avatar_versions: Photo | object;
    confirmed: boolean;
    firstname?: string;
    lastname?: string;
    created: Date;
    custom_fields: CustomField[];
    profile: UsernameIdentifier;
    is_bot: boolean;
    used?: Date | null;
}
export interface UserFull extends User {
    first_login?: Date;
    review_status: string;
    provisioned_by_signin_method?: string;
    suspended: boolean;
    streamid?: NumericIdentifier;
    timezone?: string;
    password_needs_change: boolean;
    org_unit_ids?: any;
    state?: string;
    avatar_anonymous: URLString;
    last_login?: Date;
    display_name_short?: string;
    updated: Date;
    suspended_at?: Date | null;
    notifications?: boolean;
    beta: boolean;
    email_confirmed: boolean;
    anonymous?: boolean;
    name_changed: boolean;
    is_beekeeper_aware: boolean;
    notifications_public: string;
    digest_mails: boolean;
    language?: string;
    level: number;
    tenant_id: NumericIdentifier;
    mobile_confirmed: boolean;
    push?: boolean;
    accepted_coc?: Date;
    email?: string;
    mobile?: string;
    gender?: string;
}
export declare function toUser(data: any): User;
export declare function toUserFull(data: any): UserFull;
