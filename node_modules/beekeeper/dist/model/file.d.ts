import { NumericIdentifier, UUIDIdentifier } from './identifier';
export declare enum FileUsageType {
    ARTIFACT = "artifact",
    ATTACHMENT_FILE = "attachment_file",
    ATTACHMENT_IMAGE = "attachment_image",
    ATTACHMENT_VIDEO = "attachment_video",
    AVATAR = "avatar",
    CHAT_GROUP_IMAGE = "chat_group_image",
    NAVIGATION_EXTENSION_FILE = "navigation_extension_file",
    VOICE_RECORDING = "voice_recording"
}
export declare enum FileStatus {
    READY = "ready",
    PENDING = "pending",
    ERROR = "error"
}
export interface FileUploadTokenFormData {
    name: string;
    value: string;
}
export interface FileUploadToken {
    upload_response_data_type: string;
    upload_url: string;
    registration_required: boolean;
    file_param_name: string;
    additional_form_data: FileUploadTokenFormData[];
}
export interface ImageVersion {
    height: number;
    width: number;
    name: string;
    url: string;
}
export interface File {
    id: NumericIdentifier;
    /** Size of the file in bytes. */
    size: number | null;
    /** The file name, e.g. "secret.txt". */
    name: string;
    /** The URL the file can be accessed through. */
    url: string;
    created: Date;
    updated: Date;
    status: FileStatus;
    /** The user who created the file. */
    userid: UUIDIdentifier;
    key: string;
    /** MIME media type of the file's content */
    media_type: string;
    /** The intended usage of the file. */
    usage_type: FileUsageType;
    /** If the file is a video or an image, this contains its height. */
    height?: number;
    /** If the file is a video or an image, this contains its width. */
    width?: number;
    /** If the file is a video or a voice recording, this contains its length in milliseconds. */
    duration?: number;
    /** If the file is an image, this contains scaled versions of the same image. */
    versions?: ImageVersion[];
}
export declare function toFile(data: any): File;
/**
 * Metadata needed to create a file.
 */
export declare type FileData = Pick<File, 'size' | 'name' | 'media_type' | 'usage_type' | 'height' | 'width' | 'duration'>;
