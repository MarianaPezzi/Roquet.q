/// <reference types="node" />
import { EventEmitter } from 'events';
import Pubnub from 'pubnub';
/** Realtime credentials used to receive realtime events */
export interface RealtimeCredentials {
    subscribeKey: string;
    cipherKey?: string;
}
/**
 * A class provided realtime events sent by the Beekeeper API to all clients
 */
export declare class Realtime extends EventEmitter {
    private _status;
    private _cipherKey;
    _pubnub: Pubnub;
    constructor(credentials: RealtimeCredentials);
    /**
     * Subscribes to a channel in order to receive events
     * @param {string} channel to subscribe to
     */
    subscribe(channel: string): void;
    /**
     * @returns {boolean} true if connected otherwise false
     */
    isConnected(): boolean;
    private attachListeners;
    private statusHandler;
    private messageHandler;
    private getEvent;
}
