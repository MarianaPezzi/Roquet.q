/// <reference types="node" />
import { EventEmitter } from 'events';
import { Profile } from '../model';
import { Realtime } from '../realtime';
import { Credentials, WebCredentials } from './credentials';
import { AuthenticationResource } from './resource';
import { ClientConfigResource, FileResource } from './resource';
import { ConversationResource } from './resource';
import { PostResource } from './resource';
import { ShiftResource } from './resource';
import { ArtifactResource } from './resource';
import { MessageResource } from './resource';
import { ProfileResource } from './resource';
import { StreamResource } from './resource';
import { ExtensionResource } from './resource';
export declare const version = "0.1.0";
/** Additional options for constructing a SDK */
export interface SDKOptions {
    realtime?: boolean;
    headers?: {
        [key: string]: string;
    };
}
export declare class BeekeeperSDKException extends Error {
}
/**
 * An interface representing the Beekeeper JavaScript SDK that provides
 * access to resources of the Beekeeper API and emits events, if ``realtime`` is
 * enabled. The following events will be emitted:
 * * ````
 */
export interface SDK extends EventEmitter {
    readonly Auth: AuthenticationResource;
    readonly Messages: MessageResource;
    readonly Profiles: ProfileResource;
    readonly Conversations: ConversationResource;
    readonly Posts: PostResource;
    readonly Streams: StreamResource;
    readonly Extensions: ExtensionResource;
    readonly Shifts: ShiftResource;
    readonly Artifacts: ArtifactResource;
    /**
     * @returns {Promise<Profile>} profile specified by authorization
     */
    getMe(): Promise<Profile>;
    /**
     * Enable realtime events, which are emitted on the SDK object
     */
    enableRealtime(): Promise<boolean>;
}
/**
 * An implementation of the SDK interface
 * @implements SDK
 */
export declare class SDKImpl extends EventEmitter implements SDK {
    private _basePath;
    private _headers;
    private _config;
    _realtime: Realtime | null;
    _ClientConfig: ClientConfigResource;
    Messages: MessageResource;
    Profiles: ProfileResource;
    Conversations: ConversationResource;
    Posts: PostResource;
    Streams: StreamResource;
    Extensions: ExtensionResource;
    Files: FileResource;
    Auth: AuthenticationResource;
    Shifts: ShiftResource;
    Artifacts: ArtifactResource;
    constructor(credentials: Credentials | WebCredentials, options?: SDKOptions);
    private init;
    private generateHeaders;
    /** Methods */
    getMe(): Promise<Profile>;
    enableRealtime(force?: boolean): Promise<boolean>;
}
