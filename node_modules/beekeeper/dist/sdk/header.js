"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebAuthorizationHeader = exports.AuthorizationHeader = exports.Header = exports.headersToObject = void 0;
/**
 * Takes a list of headers and reduces them into a HeaderConfig object
 * that can be easier consumed by other functions.
 * @param {Header[]} headers to be reduced to object
 * @returns {HeaderConfig}
 */
function headersToObject(headers) {
    const accObj = {};
    return headers.reduce((acc, val) => {
        acc[val.name] = val.value;
        return acc;
    }, accObj);
}
exports.headersToObject = headersToObject;
/**
 * A header class used in requests
 */
class Header {
    /**
     * @param {string} name of the header
     * @param {string} value of the header
     */
    constructor(name, value) {
        this._name = name;
        this._value = value;
    }
    /**
     * @returns {string} header as string with colon
     */
    toString() {
        return `${this._name}:${this._value}`;
    }
    get name() {
        return this._name;
    }
    get value() {
        return this._value;
    }
}
exports.Header = Header;
/**
 * An authorization header consumed by the Beekeeper API to authenticate a user
 */
class AuthorizationHeader extends Header {
    constructor(token) {
        super('Authorization', `Token ${token}`);
    }
}
exports.AuthorizationHeader = AuthorizationHeader;
/**
 * An authorization header consumed by the Beekeeper API to authenticate a user
 */
class WebAuthorizationHeader extends Header {
    constructor(csrfToken) {
        super('X-CSRF-Token', csrfToken);
    }
}
exports.WebAuthorizationHeader = WebAuthorizationHeader;
