/** Headers set as key and value object */
export interface HeaderConfig {
    [name: string]: string;
}
/**
 * Takes a list of headers and reduces them into a HeaderConfig object
 * that can be easier consumed by other functions.
 * @param {Header[]} headers to be reduced to object
 * @returns {HeaderConfig}
 */
export declare function headersToObject(headers: Header[]): HeaderConfig;
/**
 * A header class used in requests
 */
export declare class Header {
    private _name;
    private _value;
    /**
     * @param {string} name of the header
     * @param {string} value of the header
     */
    constructor(name: string, value: string);
    /**
     * @returns {string} header as string with colon
     */
    toString(): string;
    get name(): string;
    get value(): string;
}
/**
 * An authorization header consumed by the Beekeeper API to authenticate a user
 */
export declare class AuthorizationHeader extends Header {
    constructor(token: string);
}
/**
 * An authorization header consumed by the Beekeeper API to authenticate a user
 */
export declare class WebAuthorizationHeader extends Header {
    constructor(csrfToken: string);
}
