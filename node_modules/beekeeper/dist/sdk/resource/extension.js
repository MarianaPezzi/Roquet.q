"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExtensionResourceImpl = exports.ExtensionsFilter = exports.ExtensionsPlatform = void 0;
const model_1 = require("../../model");
const resource_1 = require("./resource");
const utils_1 = require("./utils");
var ExtensionsPlatform;
(function (ExtensionsPlatform) {
    ExtensionsPlatform["IOS"] = "ios";
    ExtensionsPlatform["ANDROID"] = "android";
    ExtensionsPlatform["WEB"] = "web";
})(ExtensionsPlatform = exports.ExtensionsPlatform || (exports.ExtensionsPlatform = {}));
class ExtensionsFilter {
    constructor() {
        // Unless it's the dashboard, there's usually
        // no reason to consume without placeholder expansion
        this.expandPlaceholders = true;
        /** @deprecated This is obsolete and is not used anymore */
        this.includeTrackingType = true;
    }
    get query() {
        const query = {
            platform: this.platform,
            expand_placeholders: this.expandPlaceholders,
            redirect_jwt: this.redirectJwt,
            limit: this.limit,
        };
        return utils_1.trimNullableValues(query);
    }
}
exports.ExtensionsFilter = ExtensionsFilter;
class ExtensionResourceImpl extends resource_1.Resource {
    async list(filter) {
        const response = await this.request({
            path: '/api/2/extensions',
            method: resource_1.Methods.GET,
            query: filter === null || filter === void 0 ? void 0 : filter.query,
        });
        return response.map(model_1.toExtension);
    }
}
exports.ExtensionResourceImpl = ExtensionResourceImpl;
