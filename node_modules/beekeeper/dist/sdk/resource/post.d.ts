import { Post } from '../../model';
import { Browseable, Createable, Filter, Resource } from './resource';
export interface QueryFilterParam {
    status?: 'prepared' | 'published';
    type?: 'scheduled' | 'normal';
    sticky?: boolean;
}
export declare class PostsFilter implements Filter {
    count?: boolean;
    orderby?: 'updated' | 'created' | 'scheduled_at';
    after?: Date;
    filter?: QueryFilterParam;
    limit?: number;
    before?: Date;
    get query(): Record<string, any>;
}
export interface PostResource extends Createable<Post>, Browseable<Post> {
}
export declare class PostResourceImpl extends Resource implements PostResource {
    create(model: Post): Promise<Post>;
    list(filter?: PostsFilter): Promise<Post[]>;
}
